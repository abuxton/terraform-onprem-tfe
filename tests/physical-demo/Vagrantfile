# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
	# The most common configuration options are documented and commented below.
	# For a complete reference, please see the online documentation at
	# https://docs.vagrantup.com.

	config.vm.define "rhel7" do |rhel7|
	  rhel7.vm.box = "generic/rhel7"
	  rhel7.vm.synced_folder "./", "/vagrant"
	  rhel7.vm.provision "shell", inline: <<-SHELL
	    # https://www.cyberithub.com/how-to-install-jq-json-processor-on-rhel-centos-7-8/#Step_2_Install_EPEL_Repository
	    yum install epel-release -y
	    yum update -y
	    yum install jq tree -y
	    rpm -qa | grep -i jq
	    jq -Version
	  SHELL
	end
	config.vm.define "centos7" do |centos7|
	  centos7.vm.box = "centos/7"
	  # centos mounts ./ as /vagrant by default
	  centos7.vm.provision "shell", inline: <<-SHELL
	  # https://www.cyberithub.com/how-to-install-jq-json-processor-on-rhel-centos-7-8/#Step_2_Install_EPEL_Repository
	  yum install epel-release -y
	  yum update -y
	  yum install jq tree -y
	  rpm -qa | grep -i jq
	  jq -Version
	SHELL
	end
	      config.vm.define "ubuntu20" do |ubuntu20|
		      ubuntu20.vm.box = "generic/ubuntu2010"
		      ubuntu20.vm.synced_folder "./", "/vagrant"
		      ubuntu20.vm.provision "shell", inline: <<-SHELL
		      #   apt-get update
		      #   apt-get install -y jq
		      SHELL
	end
	      config.vm.define "amzn2" do |amzn2|
		      amzn2.vm.box = "bento/amazonlinux-2"
	  #  mounts ./ as /vagrant by default
	end

	# Every Vagrant development environment requires a box. You can search for
	# boxes at https://vagrantcloud.com/search.
	# config.vm.box = "base"
	# config.vm.box = "generic/rhel7"

	# Disable automatic box update checking. If you disable this, then
	# boxes will only be checked for updates when the user runs
	# `vagrant box outdated`. This is not recommended.
	# config.vm.box_check_update = false

	# Create a forwarded port mapping which allows access to a specific port
	# within the machine from a port on the host machine. In the example below,
	# accessing "localhost:8080" will access port 80 on the guest machine.
	# NOTE: This will enable public access to the opened port
	# config.vm.network "forwarded_port", guest: 80, host: 8080

	# Create a forwarded port mapping which allows access to a specific port
	# within the machine from a port on the host machine and only allow access
	# via 127.0.0.1 to disable public access
	# config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

	# Create a private network, which allows host-only access to the machine
	# using a specific IP.
	# config.vm.network "private_network", ip: "192.168.33.10"

	# Create a public network, which generally matched to bridged network.
	# Bridged networks make the machine appear as another physical device on
	# your network.
	# config.vm.network "public_network"

	# Share an additional folder to the guest VM. The first argument is
	# the path on the host to the actual folder. The second argument is
	# the path on the guest to mount the folder. And the optional third
	# argument is a set of non-required options.
	# config.vm.synced_folder "../data", "/vagrant_data"
	# config.vm.synced_folder "./", "/vagrant"

	# Provider-specific configuration so you can fine-tune various
	# backing providers for Vagrant. These expose provider-specific options.
	# Example for VirtualBox:
	#
	config.vm.network "forwarded_port", guest: 80, host: 80
	config.vm.network "forwarded_port", guest: 443, host: 443
	config.vm.network "forwarded_port", guest: 8800, host: 8800
	config.vm.provider "virtualbox" do |vb, override|
		# TFE Requirements
		vb.memory = 4096
		vb.cpus = 2
	end

	config.vm.provider "vmware_desktop" do |vmware_desktop, override|
		# TFE Requirements
		vmware_desktop.vmx["memsize"] = "4096"
		vmware_desktop.vmx["numvcpus"] = "2"
	end
	#
	# View the documentation for the provider you are using for more
	# information on available options.

	# Enable provisioning with a shell script. Additional provisioners such as
	# Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
	# documentation for more information about their specific syntax and use.
	config.vm.provision "shell", inline: <<-SHELL
	#   apt-get update
	#   apt-get install -y apache2
	SHELL
      end
